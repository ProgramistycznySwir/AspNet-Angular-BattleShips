// <auto-generated />
using System;
using HappyTeam_BattleShips.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HappyTeam_BattleShips.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220511003643_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.5");

            modelBuilder.Entity("GamePlayer", b =>
                {
                    b.Property<Guid>("GamesID")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PlayersID")
                        .HasColumnType("TEXT");

                    b.HasKey("GamesID", "PlayersID");

                    b.HasIndex("PlayersID");

                    b.ToTable("GamePlayer");
                });

            modelBuilder.Entity("HappyTeam_BattleShips.Models.Game", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastMove")
                        .HasColumnType("TEXT");

                    b.Property<int>("Result")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.ToTable("Achievements");
                });

            modelBuilder.Entity("HappyTeam_BattleShips.Models.Player", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("AchievementCategories");
                });

            modelBuilder.Entity("HappyTeam_BattleShips.Models.TileData", b =>
                {
                    b.Property<Guid>("Game_ID")
                        .HasColumnType("TEXT");

                    b.Property<byte>("X")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("Y")
                        .HasColumnType("INTEGER");

                    b.HasKey("Game_ID", "X", "Y");

                    b.ToTable("Areas");
                });

            modelBuilder.Entity("GamePlayer", b =>
                {
                    b.HasOne("HappyTeam_BattleShips.Models.Game", null)
                        .WithMany()
                        .HasForeignKey("GamesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HappyTeam_BattleShips.Models.Player", null)
                        .WithMany()
                        .HasForeignKey("PlayersID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HappyTeam_BattleShips.Models.TileData", b =>
                {
                    b.HasOne("HappyTeam_BattleShips.Models.Game", "Game")
                        .WithMany("BoardData")
                        .HasForeignKey("Game_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("HappyTeam_BattleShips.Models.Game", b =>
                {
                    b.Navigation("BoardData");
                });
#pragma warning restore 612, 618
        }
    }
}
